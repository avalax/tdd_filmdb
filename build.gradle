buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.5.6.RELEASE")
        classpath 'org.standardout:gradle-versioneye-plugin:1.5.0'
    }
}

plugins {
    id 'jacoco'
    id 'com.github.kt3k.coveralls' version '2.8.1'
}

apply plugin: 'java'
apply plugin: 'pmd'
apply plugin: 'checkstyle'
apply plugin: 'findbugs'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'org.standardout.versioneye'

jar {
    baseName = 'tdd_filmdb'
    version =  '0.1.0'
}

repositories {
    mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile("com.h2database:h2")
    testCompile("org.springframework.boot:spring-boot-starter-test")
}

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }

    afterEvaluate {
        classDirectories = files(classDirectories.files.collect {
            fileTree(dir: it, exclude: '**/Application.class')
        })
    }
}

jacoco {
    toolVersion = "0.7.9"
}
pmd {
    toolVersion = "5.8.1"
    sourceSets = [sourceSets.main]
    ruleSetFiles = files("pmd.xml")
    reportsDir = file("$project.buildDir/reports/pmd")
    ignoreFailures = false
    consoleOutput = true
}

checkstyle {
    toolVersion = "8.1"
    sourceSets = [sourceSets.main]
    configFile = file("checkstyle.xml")
    reportsDir = file("$project.buildDir/reports/checkstyle")
    ignoreFailures = false
}

findbugs {
    toolVersion = "3.0.1"
    sourceSets = [sourceSets.main]
    excludeFilter = file("findbugs.xml")
    reportsDir = file("$project.buildDir/reports/findbugs")
    ignoreFailures = false
    effort = "max"
}

tasks.withType(FindBugs) {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}